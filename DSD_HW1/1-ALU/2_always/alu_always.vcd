$date
	Thu Mar 21 20:03:25 2024
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module alu_always_tb $end
$var wire 8 ! out [7:0] $end
$var wire 1 " carry $end
$var reg 9 # ans [8:0] $end
$var reg 4 $ count [3:0] $end
$var reg 4 % ctrl [3:0] $end
$var reg 8 & x [7:0] $end
$var reg 8 ' y [7:0] $end
$scope module alu_always $end
$var wire 1 " carry $end
$var wire 4 ( ctrl [3:0] $end
$var wire 8 ) out [7:0] $end
$var wire 8 * x [7:0] $end
$var wire 8 + y [7:0] $end
$var reg 1 , carry_r $end
$var reg 8 - out_r [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b10111 -
1,
b11000 +
b11111111 *
b10111 )
b0 (
b11000 '
b11111111 &
b0 %
b1 $
b100010111 #
1"
b10111 !
$end
#1000
b11111011 !
b11111011 )
b11111011 -
b10 $
b111111011 #
b1010 '
b1010 +
b101 &
b101 *
b1 %
b1 (
#2000
0"
0,
b0 !
b0 )
b0 -
b11 $
b0 #
b101 '
b101 +
b1010 &
b1010 *
b10 %
b10 (
#3000
b1111 !
b1111 )
b1111 -
b100 $
b1111 #
b11 %
b11 (
#4000
1"
1,
b1010101 !
b1010101 )
b1010101 -
b101 $
b101010101 #
b10101010 &
b10101010 *
b100 %
b100 (
#5000
0"
0,
b1111 !
b1111 )
b1111 -
b110 $
b1111 #
b1010 &
b1010 *
b101 %
b101 (
#6000
1"
1,
b11110000 !
b11110000 )
b11110000 -
b111 $
b111110000 #
b110 %
b110 (
#7000
0"
0,
b10100 !
b10100 )
b10100 -
b1000 $
b10100 #
b111 %
b111 (
#8000
b1 !
b1 )
b1 -
b1001 $
b1 #
b1000 %
b1000 (
#9000
b101 !
b101 )
b101 -
b1010 $
b101 #
b1001 %
b1001 (
#10000
